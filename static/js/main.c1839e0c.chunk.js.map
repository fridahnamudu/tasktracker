{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setTask","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1839e0c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\n\nconst Button = ({color , text, onClick}) => {\n   \n    return (\n    <button onClick={onClick} \n    style={{ backgroundColor: color}} \n    className='btn'>\n        {text}\n    </button>\n    )\n}\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n   text: PropTypes.string,\n   color: PropTypes.string,\n   onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd }) => {\n    \n    return (\n        <header className='header'>\n            <h1> {title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} \n            text= {showAdd ? 'Close' : 'Add'}\n             onClick={onAdd}/>\n            </header>\n    )\n}\nHeader.defaultProps = {\n    title: 'Task Tracker',\n  }\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n//css in js\n// const headingstyle = {\n//     color: 'red',\n//     backgroundColor: 'black'\n// }\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div \n        className={`task ${task.reminder ? 'reminder' : ''}`} \n        onDoubleClick={() => onToggle(task.id)}>\n            <h3> {task.task} \n            <FaTimes \n            style={{color: 'red', cursor: \n            'pointer' }} \n             onClick={() => onDelete(task.id)}/> </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n           {tasks.map((task) => ( \n           <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n           ))} \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ( {onAdd}) => {\n    const [task, setTask] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        \n        if(!task) {\n            alert('please add task')\n            return\n        }\n        onAdd({ task, day, reminder})\n\n        setTask('')\n        setDay('')\n        setReminder(false)\n        \n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' \n                placeholder='AddTask' \n                value={task} \n                onChange={(e) => setTask(e.target.value)}></input>\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Day $ Time</label>\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}></input>\n\n                \n            </div>\n            <div className='form-control'>\n                <label>Set Reminder</label>\n                <input type='checkbox' \n                checked={reminder}\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n\n            \n\n        </form>\n    )\n}\n\nexport default AddTask\n","import   { useState } from 'react'\nimport Header from './components/Header'\nimport Task from './components/Task'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n\n const [ showAddTask, setShowAddTask] = useState(false)\n    const [ tasks, setTasks] = useState([\n            {\n                id:1,\n                task: 'Doctors Appointment',\n                day:'September 15th at 2:30pm',\n                reminder: true,\n            },\n            {\n                id:2,\n                task: 'Meeting at school',\n                day:'September 16th at 2:30pm',\n                reminder: true,\n            },\n            {\n                id:3,\n                task: 'Food Shopping',\n                day:'September 17th at 2:30pm',\n                reminder: true,\n            },\n            {\n                id:4,\n                task: 'Basketball Training',\n                day:'September 18th at 2:30pm',\n                reminder: false,\n            },\n        \n        ])\n\n        //add task\n        const addTask =(task) =>{\n          const id= Math.floor(Math.random() * 10000) + 1\n          const newTask = {id, ...task }\n          setTasks([ ...tasks, newTask])\n          \n        }\n\n        //delete task\n        const deleteTask = (id) => {\n          setTasks(tasks.filter((Task) => Task.id !==id))\n        }\n\n       //toggle reminder\n       const toggleReminder = (id) => {\n         \n       }\n  \n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} \n        showAdd={showAddTask}  />\n     { showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ?(\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      ) : (\n        'No tasks to show'\n      )}\n    </div>\n     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}